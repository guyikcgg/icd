{
    "collab_server" : "",
    "contents" : "################################################\n#      Introducción a la Ciencia de Datos      #\n#     FUNCIONES Y VARIABLES PARA REGRESIÓN     #\n#                                              #\n# (C) Cristian González Guerrero               #\n################################################\n\n# Load required libraries\nlibrary(utils)\nlibrary(stats)\nlibrary(foreign)\nlibrary(ggplot2)\nlibrary(reshape)\nlibrary(kknn)\n\n# ABALONE\n\n# Load the dataset and provide it with the\n# structure from Keel\nabalone = read.csv(\n  \"datasets/abalone/abalone.dat\",\n  comment.char=\"@\"\n)\nnames(abalone) = c(\n  \"Sex\",\n  \"Length\",\n  \"Diameter\",\n  \"Height\",\n  \"Whole_weight\",\n  \"Shucked_weight\",\n  \"Viscera_weight\",\n  \"Shell_weight\",\n  \"Rings\"\n)\nabalone$Sex = factor(\n  abalone$Sex,\n  levels = c(1, 2, 3),\n  labels = c(\"M\", \"F\", \"I\")\n)\n\n# Load traning data and test data\nabalone.tra = list()\nabalone.tst = list()\nfor (i in 1:5) {\n  for (j in 1:2) {\n    filename = paste(\n      \"datasets/abalone/abalone-5-\",\n      as.character(i),\n      ifelse(j==1, \"tra\", \"tst\"),\n      \".dat\",\n      sep = \"\"\n    )\n    x = read.csv(\n      filename,\n      comment.char=\"@\"\n    )\n    names(x) = names(abalone)\n    x$Sex = factor(\n      x$Sex,\n      levels = c(1, 2, 3),\n      labels = c(\"M\", \"F\", \"I\")\n    )\n    if(j==1) {\n      abalone.tra[[i]] = x\n    } else {\n      abalone.tst[[i]] = x\n    }\n  }\n}\n\n\n# FUNCTIONS\n\n# Run k-fold cross validation on LM fit\nrun_lm_fold = function(i, tra = abalone.tra, tst = abalone.tst, model = Rings~.,  tt = \"test\") {\n  x_tra = tra[[i]]\n  x_tst = tst[[i]]\n  \n  if (tt != \"test\") {\n    test = x_tra\n  } else {\n    test = x_tst\n  }\n  \n  # Perform LM fit\n  lm.fit = lm(model, x_tra)\n  output.var = as.character(model[2])\n  \n  # Get MSE Error\n  yprime = predict(lm.fit, test)\n  sum(abs(test[,output.var]-yprime)^2)/length(yprime)\n}\n\n\nrun_knn_fold = function(i, tra = abalone.tra, tst = abalone.tst, model = Rings~.,  tt = \"test\", ...) {\n  x_tra = tra[[i]]\n  x_tst = tst[[i]]\n  \n  if (tt != \"test\") {\n    test = x_tra\n  } else {\n    test = x_tst\n  }\n  \n  # Perform knn fit\n  knn.fit = kknn(model, x_tra, test, ...)\n  output.var = as.character(model[2])\n  \n  # Get MSE Error\n  yprime = knn.fit$fitted.values\n  sum(abs(test[,output.var]-yprime)^2)/length(yprime)\n}\n\n# Add non linearities to abalone training/test set\nadd.non.linearities = function(df) {\n  # Remove new fields\n  df = df[,1:9]\n  \n  df$Whole_weight.2     = (df$Whole_weight)^(1/2)\n  df$Whole_weight.3     = (df$Whole_weight)^(1/3)\n  df$Whole_weight.log   = log(df$Whole_weight)\n  df$Shucked_weight.2   = (df$Shucked_weight)^(1/2)\n  df$Shucked_weight.3   = (df$Shucked_weight)^(1/3)\n  df$Shucked_weight.log = log(df$Shucked_weight)\n  df$Viscera_weight.2   = (df$Viscera_weight)^(1/2)\n  df$Viscera_weight.3   = (df$Viscera_weight)^(1/3)\n  df$Viscera_weight.log = log(df$Viscera_weight)\n  df$Shell_weight.2     = (df$Shell_weight)^(1/2)\n  df$Shell_weight.3     = (df$Shell_weight)^(1/3)\n  df$Shell_weight.log   = log(df$Shell_weight)\n  \n  return(df)\n}\n\nrm(i, j, filename, x)\n\n",
    "created" : 1500982290196.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2101293360",
    "id" : "6CDFC675",
    "lastKnownWriteTime" : 1502773990,
    "last_content_update" : 1502773990431,
    "path" : "/home/cristian10/workspace/master/icd/final/src/regression/build-workspace.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}