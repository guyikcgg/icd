myData = myData[order(freq, myData$Course, decreasing = TRUE), ]
ggplot(myData, aes(x = Course, y = freq, color = Class)) +
geom_point() +
geom_line(aes(group = Class)) +
scale_x_discrete(limits = myData$Course) +
ylab("Frequency")
myData$rel.freq = myData$freq/freq[order(freq, myData$Course, decreasing = TRUE)]
ggplot(myData, aes(x = Course, y = rel.freq, color = Class)) +
geom_point() +
geom_line(aes(group = Class)) +
scale_x_discrete(limits = myData$Course) +
ylab("Relative frequency")
freq = ave(rep(1, times=nrow(tae)), myData$Course, FUN=sum)
ggplot(myData, aes(x = Course, y = rel.freq, color = Class)) +
geom_point() +
geom_line(aes(group = Class)) +
geom_bar() +
scale_x_discrete(limits = myData$Course) +
ylab("Relative frequency")
ggplot(myData, aes(x = Course, count = rel.freq, color = Class)) +
geom_bar() +
scale_x_discrete(limits = myData$Course) +
ylab("Relative frequency")
ggplot(myData, aes(x = Course, count = rel.freq, fill = Class)) +
geom_bar() +
scale_x_discrete(limits = myData$Course) +
ylab("Relative frequency")
ggplot(myData, aes(x = Course, stat = rel.freq, fill = Class)) +
geom_bar() +
scale_x_discrete(limits = myData$Course) +
ylab("Relative frequency")
ggplot(myData, aes(x = Course, stat = count, fill = Class)) +
geom_bar() +
scale_x_discrete(limits = myData$Course) +
ylab("Relative frequency")
ggplot(myData, aes(x = Course, stat = "count", fill = Class)) +
geom_bar() +
scale_x_discrete(limits = myData$Course) +
ylab("Relative frequency")
ggplot(myData, aes(x = Course, fill = Class)) +
geom_col(aes()) +
scale_x_discrete(limits = myData$Course) +
ylab("Relative frequency")
ggplot(myData, aes(x = Course, y = rel.freq, fill = Class)) +
geom_col() +
scale_x_discrete(limits = myData$Course) +
ylab("Relative frequency")
ggplot(myData, aes(x = Course, y = rel.freq, fill = Class)) +
geom_col(aes(width = 0.8)) +
scale_x_discrete(limits = myData$Course) +
ylab("Relative frequency")
ggplot(myData, aes(x = Course, y = rel.freq, fill = Class)) +
geom_col(width = 0.8) +
scale_x_discrete(limits = myData$Course) +
ylab("Relative frequency")
ggplot(myData, aes(x = Course, y = rel.freq, fill = Class)) +
geom_col(width = 1) +
scale_x_discrete(limits = myData$Course) +
ylab("Relative frequency")
ggplot(myData, aes(x = Course, y = rel.freq, fill = Class)) +
geom_col(width = 2.5) +
scale_x_discrete(limits = myData$Course) +
ylab("Relative frequency")
ggplot(myData, aes(x = Course, y = rel.freq, color = Class)) +
geom_point() +
geom_line(aes(group = Class)) +
scale_x_discrete(limits = myData$Course) +
ylab("Relative frequency")
ggplot(myData, aes(x = Course, y = rel.freq, fill = Class)) +
geom_col(width = 2.5) +
scale_x_discrete(limits = myData$Course) +
ylab("Relative frequency")
ggplot(myData, aes(x = Course, y = freq, color = Class)) +
geom_point() +
geom_line(aes(group = Class)) +
scale_x_discrete(limits = myData$Course) +
ylab("Frequency")
# Barplots of factors
myData = melt.data.frame(
data = subset(tae, select = c(-Size, -Instructor, -Course)),
id.vars = "Class"
)
ggplot(myData, aes(value, fill = Class)) +
geom_bar(stat = "count", position = "dodge") +
facet_wrap(~ variable, ncol = 1, scales = "free")
ggplot(myData, aes(value, fill = Class)) +
geom_bar(stat = "count", position = "dodge") +
facet_wrap(~ variable, ncol = 2, scales = "free")
ggplot(myData, aes(value, fill = Class)) +
geom_bar(stat = "count", position = "dodge") +
xlab("") +
facet_wrap(~ variable, ncol = 2, scales = "free")
freq = ave(rep(1, times=nrow(tae)), tae$Course, FUN=sum)
myData = tae[order(freq, tae$Course, decreasing = TRUE), ]
myData = melt.data.frame(
data = subset(myData, select = c(Class, Course)),
id.vars = "Class"
)
ggplot(myData, aes(value, fill = Class)) +
geom_bar(stat = "count", position = "dodge") +
xlab("Course") +
scale_x_discrete(
limits = as.factor(
order(
count(tae, "Course")$freq,
decreasing = T
)
)
)
myData = as.data.frame(table(tae$Class, tae$Course))
names(myData) = c("Class", "Course", "freq")
freq = ave(myData$freq, myData$Course, FUN = sum)
myData = myData[order(freq, myData$Course, decreasing = TRUE), ]
ggplot(myData, aes(x = Course, y = freq, color = Class)) +
geom_point() +
geom_line(aes(group = Class)) +
scale_x_discrete(limits = myData$Course) +
ylab("Frequency")
myData$rel.freq = myData$freq/freq[order(freq, myData$Course, decreasing = TRUE)]
ggplot(myData, aes(x = Course, y = rel.freq, color = Class)) +
geom_point() +
geom_line(aes(group = Class)) +
scale_x_discrete(limits = myData$Course) +
ylab("Relative frequency")
ggplot(myData, aes(x = Course, y = rel.freq, fill = Class)) +
geom_col(width = 2.5) +
scale_x_discrete(limits = myData$Course) +
ylab("Relative frequency")
myData = melt.data.frame(
data = subset(tae, select = c(Class, Course)),
id.vars = "Class"
)
ggplot(myData, aes(value, fill = Class)) +
geom_bar(stat = "count", width = 0.9) +
facet_wrap(~ value, ncol = 7, scales = "free") +
xlab("Course")
myData = melt.data.frame(
data = subset(tae, select = c(Class, Instructor)),
id.vars = "Class"
)
ggplot(myData, aes(value, fill = Class)) +
geom_bar(stat = "count", width = 0.9) +
facet_wrap(~ value, ncol = 7, scales = "free") +
xlab("Instructor")
## Instructor
myData = as.data.frame(table(tae$Class, tae$Instructor))
names(myData) = c("Class", "Instructor", "freq")
freq = ave(myData$freq, myData$Instructor, FUN = sum)
myData = myData[order(freq, myData$Instructor, decreasing = TRUE), ]
ggplot(myData, aes(x = Instructor, y = freq, color = Class)) +
geom_point() +
geom_line(aes(group = Class)) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Frequency")
ggplot(myData, aes(x = Instructor, y = freq, color = Class)) +
geom_point() +
geom_line(aes(group = Class)) +
geom_col(position = "dodge") +
scale_x_discrete(limits = myData$Instructor) +
ylab("Frequency")
ggplot(myData, aes(x = Instructor, y = freq, color = Class)) +
geom_point() +
geom_line(aes(group = Class)) +
geom_col(position = "dodge", aes(fill = Class)) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Frequency")
ggplot(myData, aes(x = Instructor, y = freq))  +
geom_col(position = "dodge", aes(fill = Class)) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Frequency")
ggplot(myData, aes(x = Instructor, y = freq))  +
geom_col(width = 2 position = "dodge", aes(fill = Class)) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Frequency")
ggplot(myData, aes(x = Instructor, y = freq))  +
geom_col(width = 2, position = "dodge", aes(fill = Class)) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Frequency")
myData$rel.freq = myData$freq/freq[order(freq, myData$Instructor, decreasing = TRUE)]
ggplot(myData, aes(x = Instructor, y = rel.freq, fill = Class)) +
geom_col(width = 2.5) +
geom_line() +
scale_x_discrete(limits = myData$Instructor) +
ylab("Relative frequency")
ggplot(myData, aes(x = Instructor, y = rel.freq, fill = Class)) +
geom_col(width = 2.5) +
geom_line(group = Class) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Relative frequency")
ggplot(myData, aes(x = Instructor, y = rel.freq, fill = Class)) +
geom_col(width = 2.5) +
geom_line(aes(group = Class)) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Relative frequency")
ggplot(myData, aes(x = Instructor, y = freq))  +
geom_col(width = 2, position = "dodge", aes(fill = Class)) +
geom_line(aes(group = Class)) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Frequency")
geom_col(width = 2, position = "dodge", aes(fill = Class)) +
ggplot(myData, aes(x = Instructor, y = freq))  +
ylab("Frequency")
ggplot(myData, aes(x = Instructor, y = freq))  +
geom_col(width = 2, position = "dodge", aes(fill = Class)) +
geom_line(aes(group = Class, color = Class)) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Frequency")
myData = myData[order(freq, myData$Instructor, decreasing = TRUE), ]
ggplot(myData, aes(x = Instructor, y = freq))  +
geom_col(width = 2, position = "dodge", aes(fill = Class)) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Frequency")
ggplot(myData, aes(x = Instructor, y = freq))  +
geom_col(width = 2, position = "dodge", aes(fill = Class)) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Frequency")
myData = as.data.frame(table(tae$Class, tae$Instructor))
names(myData) = c("Class", "Instructor", "freq")
freq = ave(myData$freq, myData$Instructor, FUN = sum)
myData = myData[order(freq, myData$Instructor, decreasing = TRUE), ]
ggplot(myData, aes(x = Instructor, y = freq))  +
geom_col(width = 2, position = "dodge", aes(fill = Class)) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Frequency")
myData[myData==0,] = 0.1
myData[myData$freq==0,] = 0.1
ggplot(myData, aes(x = Instructor, y = freq))  +
geom_col(width = 2, position = "dodge", aes(fill = Class)) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Frequency")
myData = as.data.frame(table(tae$Class, tae$Instructor))
names(myData) = c("Class", "Instructor", "freq")
freq = ave(myData$freq, myData$Instructor, FUN = sum)
myData = myData[order(freq, myData$Instructor, decreasing = TRUE), ]
myData[myData$freq==0,]$freq = 0.1
ggplot(myData, aes(x = Instructor, y = freq))  +
geom_col(width = 2, position = "dodge", aes(fill = Class)) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Frequency")
myData = as.data.frame(table(tae$Class, tae$Instructor))
names(myData) = c("Class", "Instructor", "freq")
freq = ave(myData$freq, myData$Instructor, FUN = sum)
myData = myData[order(freq, myData$Instructor, decreasing = TRUE), ]
myData[myData$freq==0,]$freq = 0.01
ggplot(myData, aes(x = Instructor, y = freq))  +
geom_col(width = 2, position = "dodge", aes(fill = Class)) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Frequency")
myData = as.data.frame(table(tae$Class, tae$Instructor))
names(myData) = c("Class", "Instructor", "freq")
freq = ave(myData$freq, myData$Instructor, FUN = sum)
myData = myData[order(freq, myData$Instructor, decreasing = TRUE), ]
myData[myData$freq==0,]$freq = 0.03
ggplot(myData, aes(x = Instructor, y = freq))  +
geom_col(width = 2, position = "dodge", aes(fill = Class)) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Frequency")
myData$rel.freq = myData$freq/freq[order(freq, myData$Instructor, decreasing = TRUE)]
ggplot(myData, aes(x = Instructor, y = rel.freq, fill = Class)) +
geom_col(width = 2.5) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Relative frequency")
myData[myData$freq==0.03,]$freq = 0
myData = as.data.frame(table(tae$Class, tae$Instructor))
names(myData) = c("Class", "Instructor", "freq")
freq = ave(myData$freq, myData$Instructor, FUN = sum)
myData = myData[order(freq, myData$Instructor, decreasing = TRUE), ]
myData[myData$freq==0,]$freq = 0.03
ggplot(myData, aes(x = Instructor, y = freq))  +
geom_col(width = 2, position = "dodge", aes(fill = Class)) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Frequency")
myData[myData$freq==0.03,]$freq = 0
myData$rel.freq = myData$freq/freq[order(freq, myData$Instructor, decreasing = TRUE)]
ggplot(myData, aes(x = Instructor, y = rel.freq, fill = Class)) +
geom_col(width = 2.5) +
scale_x_discrete(limits = myData$Instructor) +
ylab("Relative frequency")
ggplot(tae, aes(x = Course, y = Instructor, color = Class)) +
geom_point()
?count
library(plyr)
View(tae)
ggplot(tae, aes(Class, fill = Class)) +
geom_bar(stat = "count") +
xlab("")
ggplot(tae, aes(Class, fill = Class)) +
geom_bar(stat = "count")
cv
sd(tae.original$Instructor)/mean(tae.original$Instructor)
sd(tae.original$Size)/mean(tae.original$Size)
sd(tae.original$Course)/mean(tae.original$Course)
myData = melt.data.frame(
data = subset(tae, select = c(Class, Size)),
id.vars = "Class"
)
# Boxplots of numeric variables
ggplot(myData, aes(factor(variable), value, fill = Class)) +
xlab("") + ylab("Size") + geom_boxplot() + coord_flip()
ggplot(myData, aes(value, colour = Class)) +
geom_freqpoly(bins = 7) + xlab("Size")
ggplot(myData, aes(value, colour = Class)) +
geom_freqpoly(bins = 7) + xlab("Size") + xlim(c(0,70))
ggplot(myData, aes(value, colour = Class)) +
geom_freqpoly(bins = 9) + xlab("Size") + xlim(c(0,70))
ggplot(myData, aes(value, colour = Class)) +
geom_freqpoly(bins = 8) + xlab("Size") + xlim(c(0,70))
ggplot(myData, aes(value, colour = Class)) +
geom_freqpoly(bins = 8) + xlab("Size") + xlim(c(0,70)) + geom_boxplot()
ggplot(myData, aes(value, colour = Class)) +
geom_freqpoly(bins = 8) + xlab("Size") + xlim(c(0,70)) + geom_boxplot(aes(factor(variable), value, fill = Class))
ggplot(myData, aes(value, colour = Class)) +
geom_freqpoly(bins = 8) + xlab("Size") + xlim(c(0,70))
# Visualize pseudo-numeric variables
myData = melt.data.frame(
data = subset(tae.original, select = c(Class, Course, Instructor)),
id.vars = "Class"
)
ggplot(myData, aes(factor(variable), value, fill = Class)) +
xlab("") + ylab("number") + geom_boxplot() + coord_flip()
ggplot(myData, aes(value, colour = Class)) +
geom_freqpoly(bins = 10) + xlab("") + facet_wrap(~ variable, ncol = 1)
ggplot(myData, aes(factor(variable), value, fill = Class)) +
xlab("") + ylab("number") + geom_boxplot() + coord_flip()
ggplot(myData, aes(value, colour = Class)) +
geom_freqpoly(bins = 10) + xlab("") + facet_wrap(~ variable, ncol = 1)
ggplot(myData, aes(value, colour = Class)) +
geom_freqpoly(bins = 10) + xlab("number") + facet_wrap(~ variable, ncol = 1)
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8) +
geom_freqpoly(aes(colour = Class)) +
xlab("Size") + xlim(c(0,70))
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8) +
geom_freqpoly(bins = 8, aes(colour = Class)) +
xlab("Size") + xlim(c(0,70))
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8) +
geom_freqpoly(bins = 8, aes(colour = Class)) +
xlab("Size") + xlim(c(-20,70))
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8) +
geom_freqpoly(bins = 8, aes(colour = Class)) +
xlab("Size") + xlim(c(-40,70))
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8) +
geom_freqpoly(bins = 8, aes(colour = Class)) +
xlab("Size") + xlim(c(-40,100))
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8) +
geom_freqpoly(bins = 8, aes(colour = Class)) +
xlab("Size")
myData = melt.data.frame(
data = subset(tae, select = c(Class, Size)),
id.vars = "Class"
)
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8) +
geom_freqpoly(bins = 8, aes(colour = Class)) +
xlab("Size")
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8) +
geom_freqpoly(bins = 8, aes(colour = Class)) +
xlab("Size") + xlim(c(-40,100))
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8) +
geom_freqpoly(bins = 8, aes(colour = Class)) +
xlab("Size") + xlim(c(0,70))
ks.test(tae$Size, y = "normal")
?ks.test
ks.test(tae$Size, y = "pnorm")
ks.test(tae$Native, y = "pnorm")
ks.test(tae.original$Native, y = "pnorm")
ks.test(tae.original$Instructor, y = "pnorm")
ks.test(tae.original$Instructor, y = "pnorm", alternative = "two.sided")
shapiro.test(tae.original$Instructor)
shapiro.test(tae.original$Native)
shapiro.test(tae.original$Size)
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(rnorm(100, mean = 50, sd = 32))
shapiro.test(rnorm(100, mean = 50, sd = 62))
shapiro.test(rnorm(100, mean = 50, sd = 32))
shapiro.test(rnorm(100, mean = 50, sd = 32))
shapiro.test(rnorm(100, mean = 50, sd = 32))
shapiro.test(rnorm(150, mean = 50, sd = 32))
shapiro.test(rnorm(150, mean = 50, sd = 32))
shapiro.test(rnorm(150, mean = 50, sd = 32))
shapiro.test(rnorm(150, mean = 50, sd = 32))
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Class)) +
xlab("Size") + xlim(c(0,70))
View(tae)
myData = melt.data.frame(
data = subset(tae, select = c(Class, Size, Native, Semester)),
id.vars = c("Class", "Native", "Semester")
)
# Boxplots of numeric variables
ggplot(myData, aes(factor(variable), value, fill = Class)) +
xlab("") + ylab("Size") + geom_boxplot() + coord_flip()
# Distributions of Size
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Class)) +
xlab("Size") + xlim(c(0,70))
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = )) +
xlab("Size") + xlim(c(0,70))
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
xlab("Size") + xlim(c(0,70))
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester+Native)) +
xlab("Size") + xlim(c(0,70))
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = c(Semester, Native))) +
xlab("Size") + xlim(c(0,70))
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Native)) +
xlab("Size") + xlim(c(0,70))
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
xlab("Size") + xlim(c(0,70))
ks.test(subset(tae, Semester=="Summer")$Size, subset(tae, Semester=="Summer")$Size)
subset(tae, select = Semester=="Summer")
subset(tae, select = Semester==1)
subset(tae, subset = Semester == "Summer")
ks.test(subset(tae, select = subset=="Summer")$Size, subset(tae, select = subset=="Summer")$Size)
ks.test(subset(tae, subset = Semester=="Summer")$Size, subset(tae, subset = Semester=="Summer")$Size)
subset(tae, subset = Semester == "Summer")
ks.test(subset(tae, subset = Semester=="Summer")$Size, subset(tae, subset = Semester=="Regular")$Size)
subset(tae, subset = Native==1)
subset(tae, subset = Native==0)
subset(tae, subset = Native=="English")
class(tae$Native)
factor(tae$Native)
ks.test(subset(tae, subset = Native=="English speaker")$Size, subset(tae, subset = Native=="non-English speaker")$Size)
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
xlab("Size") + xlim(c(0,70))
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
geom_freqpoly(bins = 8, aes(colour = Native)) +
facet_wrap(~variable, nclo=2)
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
geom_freqpoly(bins = 8, aes(colour = Native)) +
facet_wrap(~variable, ncol = 2)
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
geom_freqpoly(bins = 8, aes(colour = Native)) +
facet_wrap(~colour, ncol = 2)
View(myData)
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
geom_freqpoly(bins = 8, aes(colour = Native)) +
facet_grid()
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
geom_freqpoly(bins = 8, aes(colour = Native)) +
facet_grid(facets = .)
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
geom_freqpoly(bins = 8, aes(colour = Native)) +
facet_grid(Semester~Native)
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8) +
facet_grid(Semester~Native)
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
geom_freqpoly(bins = 8, aes(colour = Native)) +
facet_grid(Semester~Native)
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
facet_grid(Semester~Native)
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
facet_grid(.~Native)
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
geom_freqpoly(bins = 8, aes(colour = Native)) +
xlab("Size") + xlim(c(0,70))
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
geom_freqpoly(bins = 8, aes(colour = Native)) +
facet_wrap(.~.)
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
geom_freqpoly(bins = 8, aes(colour = Native)) +
facet_wrap(.~Native)
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
geom_freqpoly(bins = 8, aes(colour = Native)) +
facet_wrap(~Native)
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
geom_freqpoly(bins = 8, aes(colour = Native)) +
facet_wrap(Semester~Native)
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
geom_freqpoly(bins = 8, aes(colour = Native)) +
xlab("Size") + xlim(c(0,70))
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Semester)) +
xlab("Size") + xlim(c(0,70))
ggplot(myData, aes(value)) +
geom_freqpoly(bins = 8, aes(colour = Native)) +
xlab("Size") + xlim(c(0,70))
ggplot(tae.original)
ggplot(tae.original) + geom_point(aes(x = Instructor, y = Course, alpha = 0.3))
ggplot(tae.original) + geom_point(aes(x = Instructor, y = Course, alpha = 0.1))
ggplot(tae.original) + geom_point(aes(x = Instructor, y = Course, alpha = 0.01))
ggplot(tae.original) + geom_point(aes(x = Instructor, y = Course), alpha = 0.01)
ggplot(tae.original) + geom_point(aes(x = Instructor, y = Course), alpha = 0.1)
